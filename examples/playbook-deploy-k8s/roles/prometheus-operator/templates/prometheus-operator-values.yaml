alertmanager:
  config:
    global:
      resolve_timeout: 15m
      slack_api_url: {{ slack_url }}
    receivers:
    - name: slack
      slack_configs:
      - channel: '{{ slack_channel }}'
        send_resolved: false
        text: |-
{% raw %}
          {{ range .Alerts }}
            *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
            *Description:* {{ .Annotations.description }}
            *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing
          | len }}{{ end }}] Monitoring Event Notification'
{% endraw %}
    route:
      group_by:
      - job
      group_interval: 5m
      group_wait: 90s
      receiver: slack
      repeat_interval: 12h
      routes:
      - match:
          severity: critical
        receiver: slack
  serviceMonitor:
    selfMonitor: false
coreDns:
  enabled: false
defaultRules:
  create: false
grafana:
  defaultDashboardsEnabled: false
  enabled: true
  persistence:
    enabled: true
    storageClassName: ssd
  env:
    GF_SERVER_ROOT_URL: https://grafana.local.{{ base_domain }}
{% if grafana_sso_enabled %}
    GF_AUTH_GENERIC_OAUTH_NAME: {{ grafana_sso_name }}
    GF_AUTH_GENERIC_OAUTH_ENABLED: true
    GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: true
    GF_AUTH_GENERIC_OAUTH_CLIENT_ID: {{ grafana_sso_client_id }}
    GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: {{ grafana_sso_client_secret }}
    GF_AUTH_GENERIC_OAUTH_SCOPES: openid profile email
    GF_AUTH_GENERIC_OAUTH_AUTH_URL: {{ grafana_sso_idp_url }}/auth
    GF_AUTH_GENERIC_OAUTH_TOKEN_URL: {{ grafana_sso_idp_url }}/token
    GF_AUTH_BASIC_ENABLED: false
    GF_AUTH_DISABLE_LOGIN_FORM: true
{% endif %}
  serviceMonitor:
    selfMonitor: false
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeProxy:
  enabled: false
kubeScheduler:
  enabled: false
kubeStateMetrics:
  enabled: false
kubelet:
  enabled: false
nodeExporter:
  enabled: false
prometheus:
  serviceMonitor:
    selfMonitor: false
prometheusOperator:
  serviceMonitor:
    selfMonitor: false
